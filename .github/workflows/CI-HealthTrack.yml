name: CI Completo HealthTrack

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    name: Compilación y Pruebas Unitarias
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Compilar proyecto (sin integración)
        run: mvn clean install -DskipITs

      - name: Ejecutar pruebas unitarias
        run: mvn test

  selenium-and-sonarqube:
    name: Selenium + SonarQube
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Levantar la aplicación Spring Boot
        run: |
          nohup mvn spring-boot:run > log.txt 2>&1 &
          sleep 20

      - name: Ejecutar pruebas Selenium (IT)
        run: mvn verify -Dtest=UsuarioSeleniumIT

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=jprivas30_HealthTrackProyectTest

  performance-test:
    name: Pruebas de Rendimiento con JMeter
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:

      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar JMeter
        run: |
          wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz
          echo "${PWD}/apache-jmeter-5.6.3/bin" >> $GITHUB_PATH

      - name: Levantar aplicación Spring Boot en segundo plano
        run: |
          nohup mvn spring-boot:run > log.txt 2>&1 &
          sleep 20

      - name: Verificar que backend responde
        run: |
          for i in {1..5}; do
            if curl -sSf http://localhost:8080/api/usuarios; then
              echo "Backend disponible ✅"
              break
            else
              echo "Esperando que el backend esté disponible..."
              sleep 5
            fi
          done

      - name: Crear carpetas de reporte
        run: mkdir -p jmeter-reports/html-report

      - name: Ejecutar pruebas JMeter
        run: |
          jmeter -n -t HealthTrackProyect.jmx \
          -l jmeter-reports/resultados.jtl \
          -e -o jmeter-reports/html-report

      - name: Subir reporte JMeter
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-performance-report
          path: jmeter-reports/html-report